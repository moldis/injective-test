// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.1
// source: proto/prices/prices.proto

package prices

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	PricesStreamingService_GetDataStreaming_FullMethodName = "/prices.PricesStreamingService/GetDataStreaming"
)

// PricesStreamingServiceClient is the client API for PricesStreamingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PricesStreamingServiceClient interface {
	// unary
	GetDataStreaming(ctx context.Context, in *PricesRequest, opts ...grpc.CallOption) (PricesStreamingService_GetDataStreamingClient, error)
}

type pricesStreamingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPricesStreamingServiceClient(cc grpc.ClientConnInterface) PricesStreamingServiceClient {
	return &pricesStreamingServiceClient{cc}
}

func (c *pricesStreamingServiceClient) GetDataStreaming(ctx context.Context, in *PricesRequest, opts ...grpc.CallOption) (PricesStreamingService_GetDataStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &PricesStreamingService_ServiceDesc.Streams[0], PricesStreamingService_GetDataStreaming_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &pricesStreamingServiceGetDataStreamingClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PricesStreamingService_GetDataStreamingClient interface {
	Recv() (*PricesResponse, error)
	grpc.ClientStream
}

type pricesStreamingServiceGetDataStreamingClient struct {
	grpc.ClientStream
}

func (x *pricesStreamingServiceGetDataStreamingClient) Recv() (*PricesResponse, error) {
	m := new(PricesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PricesStreamingServiceServer is the server API for PricesStreamingService service.
// All implementations must embed UnimplementedPricesStreamingServiceServer
// for forward compatibility
type PricesStreamingServiceServer interface {
	// unary
	GetDataStreaming(*PricesRequest, PricesStreamingService_GetDataStreamingServer) error
	mustEmbedUnimplementedPricesStreamingServiceServer()
}

// UnimplementedPricesStreamingServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPricesStreamingServiceServer struct {
}

func (UnimplementedPricesStreamingServiceServer) GetDataStreaming(*PricesRequest, PricesStreamingService_GetDataStreamingServer) error {
	return status.Errorf(codes.Unimplemented, "method GetDataStreaming not implemented")
}
func (UnimplementedPricesStreamingServiceServer) mustEmbedUnimplementedPricesStreamingServiceServer() {
}

// UnsafePricesStreamingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PricesStreamingServiceServer will
// result in compilation errors.
type UnsafePricesStreamingServiceServer interface {
	mustEmbedUnimplementedPricesStreamingServiceServer()
}

func RegisterPricesStreamingServiceServer(s grpc.ServiceRegistrar, srv PricesStreamingServiceServer) {
	s.RegisterService(&PricesStreamingService_ServiceDesc, srv)
}

func _PricesStreamingService_GetDataStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PricesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PricesStreamingServiceServer).GetDataStreaming(m, &pricesStreamingServiceGetDataStreamingServer{stream})
}

type PricesStreamingService_GetDataStreamingServer interface {
	Send(*PricesResponse) error
	grpc.ServerStream
}

type pricesStreamingServiceGetDataStreamingServer struct {
	grpc.ServerStream
}

func (x *pricesStreamingServiceGetDataStreamingServer) Send(m *PricesResponse) error {
	return x.ServerStream.SendMsg(m)
}

// PricesStreamingService_ServiceDesc is the grpc.ServiceDesc for PricesStreamingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PricesStreamingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "prices.PricesStreamingService",
	HandlerType: (*PricesStreamingServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetDataStreaming",
			Handler:       _PricesStreamingService_GetDataStreaming_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/prices/prices.proto",
}
